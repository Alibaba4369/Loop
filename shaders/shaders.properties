#shaders/shaders.properties
#Minecraft Settings
oldLighting=false
underwaterOverlay=false
sun=false
moon=true
stars=false
vignette=false
dynamicHandLight=true

program.composite8.enabled=TAA_UPSCALING


version.1.16.5=G7

screen.columns=2
screen.Tonemapping.columns=3
screen.Shadows.columns=3
screen.Advanced.columns=3
screen.Wavy_stuff.columns=1
screen.Reflections.columns=1
screen.POM.columns=2
screen.Camera.columns=3


#Get the correct alpha value : S_A*(1-DST_A)+DST_A
blend.gbuffers_terrain=off
blend.gbuffers_textured= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_armor_glint= SRC_ALPHA ZERO ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_textured_lit= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_weather= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_water= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_hand_water= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_entities = off
blend.gbuffers_hand = off
blend.gbuffers_block= off
blend.gbuffers_basic= off
blend.gbuffers_damagedblock= SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE_MINUS_DST_ALPHA ONE
blend.gbuffers_skytextured=off

alphaTest.gbuffers_terrain=GREATER 0.1
alphaTest.gbuffers_entities=GREATER 0.1
alphaTest.gbuffers_weather=false
alphaTest.gbuffers_water=false
alphaTest.gbuffers_skybasic=false
alphaTest.gbuffers_skytextured=false

sliders=SPEC_SSR_QUALITY RENDER_SCALE_MIN RENDER_SCALE_MAX BLOOMY_FOG FOG_RAIN_MULTIPLIER FOG_TOD_MULTIPLIER CLOUDY_FOG_AMOUNT BASE_FOG_AMOUNT WAVY_SPEED WAVY_STRENGTH ANTI_GHOSTING BLOOM_STRENGTH Underwater_Fog_Density shadowDistance shadowDistanceRenderMul FinalR FinalG FinalB Ambient_Mult Sky_Brightness fog_coefficientMieR fog_coefficientMieG fog_coefficientMieB sun_illuminance sunColorG sunColorB sunColorR sky_mieg sky_coefficientMieB sky_coefficientMieG sky_coefficientMieR sky_coefficientRayleighB sky_coefficientRayleighG sky_coefficientRayleighR CLOUDS_QUALITY EXPOSURE_MULTIPLIER MIN_LIGHT_AMOUNT TORCH_R TORCH_G TORCH_B TORCH_AMOUNT shadowMapResolution sunPathRotation SKY_BRIGHTNESS_DAY SKY_BRIGHTNESS_NIGHT BLEND_FACTOR FLICKER_REDUCTION MOTION_REJECTION VL_SAMPLES Exposure_Speed POM_MAP_RES POM_DEPTH MAX_ITERATIONS MAX_DIST SSR_STEPS ambientOcclusionLevel SEA_LEVEL ATMOSPHERIC_DENSITY CLOUDS_SHADOWS_STRENGTH moon_illuminance moonColorR moonColorG moonColorB fog_mieg1 fog_mieg2 fog_coefficientRayleighR fog_coefficientRayleighG Emissive_Strength Texture_MipMap_Bias SATURATION Manual_exposure_value focal aperture MANUAL_FOCUS SHADOW_FILTER_SAMPLE_COUNT Max_Filter_Depth VPS_Search_Samples Min_Shadow_Filter_Radius Max_Shadow_Filter_Radius SSAO_SAMPLES Water_Top_Layer fog_coefficientRayleighB SHARPENING rayMarchSampleCount Dirt_Mie_Phase Dirt_Amount Dirt_Scatter_R Dirt_Scatter_G Dirt_Scatter_B Dirt_Absorb_R Dirt_Absorb_G Dirt_Absorb_B Water_Absorb_R Water_Absorb_G Water_Absorb_B Purkinje_strength Purkinje_strength Purkinje_R Purkinje_G Purkinje_B DoF_Adaptation_Speed Purkinje_Multiplier CROSSTALK RENDER_SCALE_X RENDER_SCALE_Y VL_RENDER_RESOLUTION BLOOM_QUALITY VL_RENDER_RESOLUTION RAY_COUNT STEPS STEP_LENGTH cloud_LevelOfDetail cloud_ShadowLevelOfDetail cloud_LevelOfDetailLQ cloud_ShadowLevelOfDetailLQ minRayMarchSteps maxRayMarchSteps minRayMarchStepsLQ maxRayMarchStepsLQ cloudDensity cloudCoverage fbmAmount fbmPower1 fbmPower2 cloudMieG cloudMieG2 cloudMie2Multiplier

screen= <profile> <emtpy> [Atmospherics] [TAA_OPTIONS] [Lighting] [Camera] [Shading] [Wavy_stuff] [Water_and_transparencies] [DEV] 
screen.Wavy_stuff = WAVY_STRENGTH WAVY_SPEED WAVY_PLANTS
screen.Atmospherics= SEA_LEVEL  VL_SAMPLES   [Clouds] [Fog_Color] [Fog_Densities] BLOOMY_FOG VL_RENDER_RESOLUTION VL_Clouds_Shadows
screen.Clouds = VOLUMETRIC_CLOUDS CLOUDS_QUALITY cloud_LevelOfDetail cloud_ShadowLevelOfDetail cloud_LevelOfDetailLQ cloud_ShadowLevelOfDetailLQ minRayMarchSteps maxRayMarchSteps minRayMarchStepsLQ maxRayMarchStepsLQ cloudDensity cloudCoverage fbmAmount fbmPower1 fbmPower2 cloudMieG cloudMieG2 cloudMie2Multiplier
screen.Fog_Densities = FOG_RAIN_MULTIPLIER FOG_TOD_MULTIPLIER CLOUDY_FOG_AMOUNT BASE_FOG_AMOUNT ATMOSPHERIC_DENSITY Underwater_Fog_Density
screen.Fog_Color = fog_mieg1 fog_mieg2 fog_coefficientRayleighR fog_coefficientRayleighG fog_coefficientRayleighB fog_coefficientMieR fog_coefficientMieG fog_coefficientMieB
screen.Water_and_transparencies = Dirt_Amount Dirt_Mie_Phase rayMarchSampleCount SCREENSPACE_REFLECTIONS SSR_STEPS USE_QUARTER_RES_DEPTH SUN_MICROFACET_SPECULAR Water_Top_Layer lightMapDepthEstimation [Advanced]
screen.Advanced = Dirt_Scatter_R Dirt_Scatter_G Dirt_Scatter_B Dirt_Absorb_R Dirt_Absorb_G Dirt_Absorb_B Water_Absorb_R Water_Absorb_G Water_Absorb_B
screen.TAA_OPTIONS= TAA <empty> BLEND_FACTOR CLOSEST_VELOCITY NO_CLIP TAA_UPSCALING RENDER_SCALE_X RENDER_SCALE_Y TAA_DS <empty> RENDER_SCALE_MIN RENDER_SCALE_MAX 

screen.DEV=*

screen.Lighting= [Torch] [Sky] [Ambient] SPEC SPECSTRENGTH SPEC_SSR_QUALITY
screen.Torch = TORCH_R TORCH_G TORCH_B TORCH_AMOUNT Emissive_Strength
screen.Sky=[Sky_coefficients] [Sun_and_Moon_Colors] sunPathRotation
screen.Sky_coefficients = Sky_Brightness sky_mieg sky_coefficientRayleighR sky_coefficientRayleighG sky_coefficientRayleighB sky_coefficientMieR sky_coefficientMieG sky_coefficientMieB
screen.Sun_and_Moon_Colors =  sunColorR sunColorG sunColorB sun_illuminance moonColorR moonColorG moonColorB moon_illuminance
screen.Ambient = MIN_LIGHT_AMOUNT SEPARATE_AO ambientOcclusionLevel Ambient_Mult

screen.Shading =     [Shadows] [SSGI_Parameters] [POM] DISABLE_ALPHA_MIPMAPS Texture_MipMap_Bias  BICUBIC_UPSCALING CONTRAST_ADAPTATIVE_SHARPENING SHARPENING LABSSS
screen.Shadows = [Filtering] SCREENSPACE_CONTACT_SHADOWS shadowMapResolution CLOUDS_SHADOWS CLOUDS_SHADOWS_STRENGTH shadowDistanceRenderMul shadowDistance SHADOW_FRUSTRUM_CULLING CAVE_LIGHT_LEAK_FIX SHADOW_DISABLE_ALPHA_MIPMAPS Stochastic_Transparent_Shadows
screen.SSGI_Parameters = SSGI RAY_COUNT STEPS STEP_LENGTH SSPTMIX1  ssptfilter <empty> <empty> filterpass_0 filterpass_1 filterpass_2 filterpass_3
screen.Filtering = Variable_Penumbra_Shadows VPS_Search_Samples Min_Shadow_Filter_Radius Max_Shadow_Filter_Radius Max_Filter_Depth SHADOW_FILTER_SAMPLE_COUNT
screen.POM = POM Depth_Write_POM POM_DEPTH MAX_ITERATIONS MAX_DIST AutoGeneratePOMTextures
screen.Camera = EXPOSURE_MULTIPLIER Exposure_Speed AUTO_EXPOSURE Manual_exposure_value BLOOM_STRENGTH BLOOM_QUALITY FinalR FinalG FinalB [Tonemapping]  [DepthOfField] [Purkinje_effect]
screen.Purkinje_effect = Purkinje_strength Purkinje_strength Purkinje_R Purkinje_G Purkinje_B Purkinje_Multiplier
screen.Tonemapping = TONEMAP USE_ACES_COLORSPACE_APPROXIMATION SATURATION CROSSTALK
screen.DepthOfField = DOF BOKEH_MODE DOF_MODE focal aperture MANUAL_FOCUS EXCLUDE_MODE DoF_Adaptation_Speed


texture.noise=texture/noises.png
texture.composite.colortex6=texture/blueNoise.png
texture.gbuffers.gaux3=texture/wave.png
separateAo=true


beacon.beam.depth=true
rain.depth=false
clouds=off
variable.float.texelSizeX = 1.0/viewWidth
variable.float.texelSizeY = 1.0/viewHeight
uniform.vec2.texelSize=vec2(texelSizeX,texelSizeY)

uniform.int.framemod8 = frameCounter%8

variable.float.normSunVec = sqrt(sunPosition.x*sunPosition.x+sunPosition.y*sunPosition.y+sunPosition.z*sunPosition.z)
variable.float.normUpVec = sqrt(upPosition.x*upPosition.x+upPosition.y*upPosition.y+upPosition.z*upPosition.z)

variable.float.sunPosX = sunPosition.x/normSunVec
variable.float.sunPosY = sunPosition.y/normSunVec
variable.float.sunPosZ = sunPosition.z/normSunVec

uniform.vec3.sunVec=vec3(sunPosX,sunPosY,sunPosZ)

variable.float.upPosX = upPosition.x/normUpVec
variable.float.upPosY = upPosition.y/normUpVec
variable.float.upPosZ = upPosition.z/normUpVec

uniform.vec3.upVec=vec3(upPosX,upPosY,upPosZ)
uniform.float.sunElevation = sunPosX*upPosX+sunPosY*upPosY+sunPosZ*upPosZ
uniform.float.lightSign = clamp(sunElevation * 1000000000000000000, 0.0, 1.0) * 2.0 - 1.0

#Max angle at frustrum diagonal
variable.float.maxAngle = atan(1.0 / gbufferProjection.1.1 * sqrt(1.0+(aspectRatio * aspectRatio)))
uniform.float.cosFov = cos(maxAngle)
variable.float.viewDirX = gbufferModelViewInverse.2.0
variable.float.viewDirY = gbufferModelViewInverse.2.1
variable.float.viewDirZ = gbufferModelViewInverse.2.2
variable.float.normView = sqrt(viewDirX*viewDirX + viewDirY*viewDirY + viewDirZ*viewDirZ)
variable.float.shViewDirX = (shadowModelView.0.0 * viewDirX + shadowModelView.1.0 * viewDirY + shadowModelView.2.0 * viewDirZ)/normView
variable.float.shViewDirY = (shadowModelView.0.1 * viewDirX + shadowModelView.1.1 * viewDirY + shadowModelView.2.1 * viewDirZ)/normView
variable.float.shViewDirZ = (shadowModelView.0.2 * viewDirX + shadowModelView.1.2 * viewDirY + shadowModelView.2.2 * viewDirZ)/normView

uniform.vec3.shadowViewDir = vec3(shViewDirX, shViewDirY, shViewDirZ)

variable.float.shStartX = (shadowModelView.0.0 * gbufferModelViewInverse.3.0 + shadowModelView.1.0 * gbufferModelViewInverse.3.1 + shadowModelView.2.0 * gbufferModelViewInverse.3.2)
variable.float.shStartY = (shadowModelView.0.1 * gbufferModelViewInverse.3.0 + shadowModelView.1.1 * gbufferModelViewInverse.3.1 + shadowModelView.2.1 * gbufferModelViewInverse.3.2)
variable.float.shStartZ = (shadowModelView.0.2 * gbufferModelViewInverse.3.0 + shadowModelView.1.2 * gbufferModelViewInverse.3.1 + shadowModelView.2.2 * gbufferModelViewInverse.3.2)

uniform.vec3.shadowCamera = vec3(shStartX + shadowModelView.3.0 + shViewDirX*2., shStartY + shadowModelView.3.1 + shViewDirY*2., shStartZ + shadowModelView.3.2 + shViewDirZ*2.0)


variable.float.wSunX = (gbufferModelViewInverse.0.0 * sunPosX + gbufferModelViewInverse.1.0 * sunPosY + gbufferModelViewInverse.2.0 * sunPosZ)
variable.float.wSunY = (gbufferModelViewInverse.0.1 * sunPosX + gbufferModelViewInverse.1.1 * sunPosY + gbufferModelViewInverse.2.1 * sunPosZ)
variable.float.wSunZ = (gbufferModelViewInverse.0.2 * sunPosX + gbufferModelViewInverse.1.2 * sunPosY + gbufferModelViewInverse.2.2 * sunPosZ)

variable.float.shSunX = (shadowModelView.0.0 * wSunX + shadowModelView.1.0 * wSunY + shadowModelView.2.0 * wSunZ)
variable.float.shSunY = (shadowModelView.0.1 * wSunX + shadowModelView.1.1 * wSunY + shadowModelView.2.1 * wSunZ)
variable.float.shSunZ = (shadowModelView.0.2 * wSunX + shadowModelView.1.2 * wSunY + shadowModelView.2.2 * wSunZ)

uniform.vec3.shadowLightVec = vec3(lightSign*shSunX, lightSign*shSunY, lightSign*shSunZ)

uniform.float.shadowMaxProj = 150.0/abs(sunPosY)
uniform.float.waveScale = if(in(biome_category,CAT_OCEAN,CAT_BEACH), 1.0, 0.0)*74.0+54.0

uniform.float.averageFrameTime = smooth(frameTime*10,50)





profile.Normal= ssptfilter !ssgi_ext SSGI RAY_COUNT=2 STEPS=6   STEP_LENGTH=60 !POM !SPEC SSPTMIX1=1.0  ssgi_staturation SPEC_SSR_QUALITY=2 shadowMapResolution=3172 shadowDistance=150 Min_Shadow_Filter_Radius=1.412 SHADOW_FILTER_SAMPLE_COUNT=6 Variable_Penumbra_Shadows VPS_Search_Samples=4 VL_SAMPLES=8 VOLUMETRIC_CLOUDS CLOUDS_QUALITY=0.35 SCREENSPACE_REFLECTIONS rayMarchSampleCount=4 SSR_STEPS=10  !DISABLE_ALPHA_MIPMAPS!Stochastic_Transparent_Shadows !SHADOW_DISABLE_ALPHA_MIPMAPS SCREENSPACE_CONTACT_SHADOWS  shadowDistanceRenderMul=-1.0 VOLUMETRIC_FOG 
profile.Lite= !ssptfilter  !ssgi_ext !SSGI RAY_COUNT=2 STEPS=6  STEP_LENGTH=60 !POM !SPEC SSPTMIX1=1.0  ssgi_staturation SPEC_SSR_QUALITY=2 shadowMapResolution=2048 shadowDistance=150 Min_Shadow_Filter_Radius=1.412 SHADOW_FILTER_SAMPLE_COUNT=6 Variable_Penumbra_Shadows VPS_Search_Samples=4 VL_SAMPLES=8 VOLUMETRIC_CLOUDS CLOUDS_QUALITY=0.35 SCREENSPACE_REFLECTIONS rayMarchSampleCount=4 SSR_STEPS=10  !DISABLE_ALPHA_MIPMAPS!Stochastic_Transparent_Shadows !SHADOW_DISABLE_ALPHA_MIPMAPS SCREENSPACE_CONTACT_SHADOWS  shadowDistanceRenderMul=-1.0 VOLUMETRIC_FOG 
profile.SSPT=  ssptfilter   ssgi_ext  SSGI RAY_COUNT=6 STEPS=99 STEP_LENGTH=22 POM SPEC SSPTMIX1=0.01  !ssgi_staturation SPEC_SSR_QUALITY=5 shadowMapResolution=3172 shadowDistance=150 Min_Shadow_Filter_Radius=1.412 SHADOW_FILTER_SAMPLE_COUNT=6 Variable_Penumbra_Shadows VPS_Search_Samples=4 VL_SAMPLES=8 VOLUMETRIC_CLOUDS CLOUDS_QUALITY=0.35 SCREENSPACE_REFLECTIONS rayMarchSampleCount=4 SSR_STEPS=10  !DISABLE_ALPHA_MIPMAPS!Stochastic_Transparent_Shadows !SHADOW_DISABLE_ALPHA_MIPMAPS SCREENSPACE_CONTACT_SHADOWS  shadowDistanceRenderMul=-1.0 VOLUMETRIC_FOG 



# Biomes #

#DefaultForest
uniform.float.isDefaultForest=smooth(1, if(in(biome, 7, 16, 4, 18, 132, 1, 129), 1, 0), 1000, 1000)

#Snow
uniform.float.isSnow=smooth(2, if(in(biome, 11, 26, 12, 13, 140), 1, 0), 1000, 1000)

#WarmOcean
uniform.float.isWarmOcean=smooth(3, if(in(biome, 0, 24, 45, 48, 44, 47), 1, 0), 1000, 1000) 

#ColdOcean
uniform.float.isColdOcean=smooth(4, if(in(biome, 10, 46, 49, 50), 1, 0), 1000, 1000)

#Desert
uniform.float.isDesert=smooth(5, if(in(biome, 2, 17, 130), 1, 0), 1000, 1000)

#Badlands
uniform.float.isBadlands=smooth(6, if(in(biome, 37, 39, 167, 38, 166, 165), 1, 0), 1000, 1000)

#Swamp
uniform.float.isSwamp=smooth(7, if(in(biome, 6, 134), 1, 0), 1000, 1000)

#Jungle
uniform.float.isJungle=smooth(8, if(in(biome, 21, 22, 149, 23, 151, 168, 169), 1, 0), 1000, 1000)

#Mountains
uniform.float.isMountains=smooth(9, if(in(biome, 25, 3, 34, 131, 162, 20), 1, 0), 1000, 1000) 

#BirchForest
uniform.float.isBirchForest=smooth(10, if(in(biome, 27, 28, 155, 156), 1, 0), 1000, 1000)

#DarkForest
uniform.float.isDarkForest=smooth(11, if(in(biome, 29, 157), 1, 0), 1000, 1000)

#Taiga
uniform.float.isTaiga=smooth(12, if(in(biome, 5, 19, 133, 160, 161), 1, 0), 1000, 1000)

#SnowyTaiga
uniform.float.isSnowyTaiga=smooth(13, if(in(biome, 30, 31, 158), 1, 0), 1000, 1000)

#MushroomFields
uniform.float.isMushroomFields=smooth(14, if(in(biome, 14, 15), 1, 0), 1000, 1000)

#Savanna
uniform.float.isSavanna=smooth(15, if(in(biome, 35, 36, 163, 164), 1, 0), 1000, 1000)
